searchState.loadedDescShard("of", 0, "A pure-Rust #![no_std] crate for parsing Flattened …\nRepresents a <code>/cpus/cpu*</code> node with specific helper methods\nBootargs from the FDT\n<code>clock-frequency</code> property\nCPU nodes in the FDT\nWhether the FDT is available\nReturns the size of the FDT\nSearches for a node which contains a <code>compatible</code> property …\nFind a phandle in the FDT\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the IDs for the given CPU\nSafety\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRoot Node found model or first compatible\nAll memory nodes in the FDT\nWhether the device pointed by the node is available\nParse a phandle with arguments\nRead a u32 property from a node\nPsci node in the FDT\nReturns an iterator over all of the properties for the CPU …\nAttempts to find the a property by its name\n<code>timebase-frequency</code> property\n<code>compatible</code> property\nOptional<code>cpu_off</code> property\nOptional<code>cpu_on</code> property\nOptional<code>cpu_suspend</code> property\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>method</code> property\nOptional<code>migrate</code> property\nReturns an iterator over all of the available memory …")