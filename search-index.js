var searchIndex = new Map(JSON.parse('[["of",{"t":"FFIFOOHNNNNNNNNNHHHHHNNNNHNHNNNCHHONOHHHHNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Cpu","MachineFdt","OfNode","OfPhandleArgs","args","args_count","bootargs","borrow","","","borrow_mut","","","clock_frequency","clone","clone_to_uninit","cpus","fdt_available","fdt_size","find_compatible_node","find_phandle","fmt","from","","","get_fdt_ptr","ids","init_fdt_ptr","into","","","kernel_nodes","machin_name","memory_nodes","name","new","np","of_device_is_available","of_parse_phandle_with_args","of_property_read_u32","pcsi","properties","property","timebase_frequency","try_from","","","try_into","","","type_id","","","Memory","Pcsi","borrow","","borrow_mut","","clone","","clone_to_uninit","","compatible","cpu_off","cpu_on","cpu_suspend","from","","into","","method","migrate","regions","try_from","","try_into","","type_id",""],"q":[[0,"of"],[53,"of::kernel_nodes"],[80,"core::option"],[81,"fdt::standard_nodes"],[82,"core::iter::traits::iterator"],[83,"core::fmt"],[84,"core::result"],[85,"of::phandle_arg"],[86,"fdt::node"],[87,"core::any"]],"i":"````Bj0`Cd1j120000`````0120`0`120```Aj33````111231231231``BfBl10101000001010001101010","f":"``````{{}{{f{{d{b}}}}}}{d{{d{c}}}{}}00{{{d{h}}}{{d{hc}}}{}}00{jl}{{{d{j}}}j}{{dn}A`}{{}{{f{{`{{Ad{}{{Ab{j}}}}}}}}}}{{}Af}{{}l}{{{d{{Ah{{d{b}}}}}}}{{`{{Ad{}{{Ab{Aj}}}}}}}}{Al{{f{Aj}}}}{{{d{j}}{d{hAn}}}{{Bb{A`B`}}}}{cc{}}00{{}{{f{n}}}}{jBd}{nA`}{{}c{}}00`{{}{{f{{d{b}}}}}}{{}{{f{{`{{Ad{}{{Ab{Bf}}}}}}}}}}`{{Ajl{Bh{Al}}}Bj}`{AjAf}{{Aj{d{b}}{f{{d{b}}}}l}{{f{Bj}}}}{{Aj{d{b}}l}{{f{Al}}}}{{}{{f{Bl}}}}{j{{`{{Ad{}{{Ab{Bn}}}}}}}}{{j{d{b}}}{{f{Bn}}}}{jl}{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{dC`}00``{d{{d{c}}}{}}0{{{d{h}}}{{d{hc}}}{}}0{{{d{Bf}}}Bf}{{{d{Bl}}}Bl}{{dn}A`}0{Bl{{d{b}}}}{Bl{{f{Al}}}}00{cc{}}0{{}c{}}032{Bf{{`{{Ad{}{{Ab{Cb}}}}}}}}<<;;::","D":"Dj","p":[[1,"str"],[1,"reference",null,null,1],[6,"Option",80,null,1],[0,"mut"],[5,"Cpu",0,81],[1,"usize"],[1,"u8"],[1,"unit"],[17,"Item"],[10,"Iterator",82],[1,"bool"],[1,"slice"],[8,"OfNode",0],[1,"u32"],[5,"Formatter",83],[5,"Error",83],[6,"Result",84,null,1],[5,"CpuIds",81],[5,"Memory",53],[1,"array"],[5,"OfPhandleArgs",0,85],[5,"Pcsi",53],[5,"NodeProperty",86],[5,"TypeId",87],[5,"MemoryRegion",81],[5,"MachineFdt",0]],"r":[[0,81],[3,85],[4,85],[5,85],[8,85],[9,81],[11,85],[12,81],[13,81],[14,81],[15,81],[21,81],[23,85],[24,81],[26,81],[29,85],[30,81],[35,85],[36,85],[41,81],[42,81],[43,81],[45,85],[46,81],[48,85],[49,81],[51,85],[52,81]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACsACQACAAQACAAFAA8AAQAWAAAAGgAAACAAAAAjAAIALQASAEsABQA=","P":[[7,"T"],[13,""],[22,"T"],[25,""],[28,"U"],[32,""],[44,"U,T"],[47,"U"],[50,""],[55,"T"],[59,""],[67,"T"],[69,"U"],[71,""],[74,"U,T"],[76,"U"],[78,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[2705]}